import pygame
from PygameEngine import GameEngine

class Map:
    
    CELLSIZE = 47
    ROWS = GameEngine.HEIGHT//CELLSIZE
    COLS = GameEngine.WIDTH//CELLSIZE

    def __init__(self):
        
        self.gameMap = [
        ["1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1"],
        ["1","_","_","_","_","_","1","1","_","_","_","_","_","_","_","_","_","_", "1", "_", "_", "_", "_", "_", "_", "_", "_", "_", "_", "1", "_", "1"],
        ["1","_","_","_","_","_","1","1","1","_","_","_","_","_","1","_","_","_", "_", "_", "_", "_", "_", "_", "_", "_", "_", "1", "1", "1", "_", "1"],
        ["1","_","_","_","_","_","_","_","_","_","_","_","_","_","_","1","_","1", "-", "1", "1", "_", "1", "_", "_", "_", "_", "_", "_", "1", "_", "1"],
        ["1","_","_","_","_","_","_","_","_","_","_","_","_","_","_","1","_","1", "-", "1", "1", "_", "1", "_", "_", "_", "_", "_", "_", "1", "_", "1"],
        ["1","_","_","_","_","_","1","1","1","_","_","_","1","_","_","1","_","1", "_", "_", "1", "_", "1", "_", "_", "_", "_", "_", "1", "1", "_", "1"],
        ["1","_","_","_","_","_","1","1","1","_","_","_","1","_","_","1","_","_", "_", "_", "1", "_", "1", "_", "_", "_", "_", "_", "_", "_", "_", "1"],
        ["1","_","_","_","_","_","_","_","_","_","_","1","1","_","1","_","_","_", "_", "_", "_", "1", "_", "_", "_", "_", "1", "1", "1", "1", "1", "1"],
        ["1","_","_","_","_","_","1","1","1","_","_","_","1","_","_","1","_","1", "_", "_", "1", "_", "1", "_", "_", "_", "_", "_", "1", "1", "_", "1"],
        ["1","_","_","_","_","_","1","1","1","_","_","_","1","_","_","1","_","_", "_", "_", "1", "_", "1", "_", "_", "_", "_", "_", "_", "_", "_", "1"],
        ["1","_","_","_","_","_","_","_","_","_","_","1","1","_","1","_","_","_", "_", "_", "_", "1", "_", "_", "_", "_", "1", "1", "1", "1", "1", "1"],
        ["1","_","_","_","_","_","1","1","1","_","_","1","1","_","_","_","1","_", "1", "_", "_", "1", "_", "_", "_", "_", "_", "1", "_", "_", "_", "1"],
        ["1","1","1","1","1","1","1","1","1","_","_","1","_","_","_","_","1","_", "1", "_", "_", "1", "_", "_", "_", "_", "_", "1", "_", "_", "_", "1"],
        ["1","_","_","_","_","_","_","_","_","_","_","1","1","1","1","_","1","_", "1", "_", "_", "_", "_", "_", "_", "_", "_", "_", "_", "_", "_", "1"],
        ["1","1","1","1","1","1","1","1","1","1","1","1","1","_","_","1","_","_", "_", "_", "1", "_", "1", "_", "_", "_", "_", "_", "_", "_", "_", "1"],
        ["1","_","_","_","_","_","1","1","1","1","1","1","1","_","1","_","_","_", "_", "_", "_", "1", "_", "_", "_", "_", "1", "1", "1", "1", "1", "1"],
        ["1","_","_","_","_","_","1","1","_","_","_","_","_","_","_","_","1","_", "1", "_", "_", "1", "_", "_", "_", "_", "_", "1", "_", "_", "_", "1"],
        ["1","_","_","_","_","_","_","_","_","_","_","_","_","1","1","_","1","_", "1", "_", "_", "_", "_", "_", "_", "_", "_", "_", "_", "_", "_", "1"],
        ["1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1"]
    ]
        self.wallMap = {}
        self.getMap()

    def drawMap(self):
        for yInd, y in enumerate(self.gameMap):
            for xInd in range(len(y)):
                if (y[xInd] == "1"):                                # WALL COLOR
                    pygame.draw.rect(GameEngine.screen, (255, 69, 69),
                                     pygame.Rect(xInd*self.CELLSIZE, yInd*self.CELLSIZE,
                                                 self.CELLSIZE, self.CELLSIZE))
                else:
                                                                    # MAP COLOR
                   """ pygame.draw.rect(GameEngine.screen, (50, 150, 30),
                                     pygame.Rect(xInd*self.CELLSIZE, yInd*self.CELLSIZE,
                                     self.CELLSIZE, self.CELLSIZE))
"""
        
    def drawGrid(self):
        for x in range(1, self.COLS+1):
            pygame.draw.line(GameEngine.screen, (0xff, 0xff, 0xff), (
                x*self.CELLSIZE, 0), (x*self.CELLSIZE, GameEngine.HEIGHT))
        for y in range(1, self.ROWS+1):
            pygame.draw.line(GameEngine.screen, (0xff, 0xff, 0xff),
                             (0, y*self.CELLSIZE), (GameEngine.WIDTH, y*self.CELLSIZE))

    def getMap(self):
        for j, row in enumerate(self.gameMap):
            for i, value in enumerate(row):
                if value == "1":
                    self.wallMap[(i, j)] = value